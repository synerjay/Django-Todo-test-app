{"ast":null,"code":"var _jsxFileName = \"/Users/jerometo/Documents/django-todo-react/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Popup from './components/Popup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const todoItems = [{\n    id: 2,\n    title: 'Buy avocados from Calbee',\n    description: 'I need to buy some more avocados',\n    completed: true\n  }, {\n    id: 3,\n    title: 'Need to learn Django REST Framework',\n    description: 'Yes, please more knowledge!',\n    completed: false\n  }, {\n    id: 4,\n    title: 'Study some more Data Analysis and SQL',\n    description: 'I need to study more PostgreSQL',\n    completed: false\n  }, {\n    id: 5,\n    title: 'Study MySQL',\n    description: 'Learn the basics of SQL coding of database',\n    completed: true\n  }, {\n    id: 6,\n    title: 'Django REST Framework is so awesome!!!!',\n    description: \"WHAT THE HELL!! I'm freaking out!!! Django is awesome!!\",\n    completed: true\n  }]; // States\n\n  const [viewCompleted, setViewCompleted] = useState(false);\n  const [todoList, setTodoList] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [activeItem, setActiveItem] = useState({\n    title: '',\n    description: '',\n    completed: false\n  }); // Functions\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const handleSubmit = item => {\n    toggle();\n\n    if (item.id) {\n      axios.put(`/api/todos/${item.id}/`, item).then(res => refreshList());\n      return;\n    }\n\n    axios.post('/api/todos/', item).then(res => refreshList());\n  };\n\n  const handleDelete = item => {\n    axios.delete(`/api/todos/${item.id}/`).then(res => refreshList());\n  };\n\n  const createItem = () => {\n    const item = {\n      title: '',\n      description: '',\n      completed: false\n    };\n    setActiveItem(item);\n    setModal(!modal);\n  };\n\n  const editItem = item => {\n    setActiveItem(item);\n    setModal(!modal);\n  };\n\n  const displayCompleted = status => {\n    if (status) {\n      return setViewCompleted(true);\n    }\n\n    return setViewCompleted(false);\n  };\n\n  const renderTabList = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav nav-tabs\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: viewCompleted ? 'nav-link active' : 'nav-link',\n      onClick: () => displayCompleted(true),\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: viewCompleted ? 'nav-link' : 'nav-link active',\n      onClick: () => displayCompleted(false),\n      children: \"Incomplete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n\n  const renderItems = () => {\n    const newItems = todoList.filter(item => item.completed == viewCompleted);\n    return newItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `todo-title mr-2 ${viewCompleted ? 'completed-todo' : ''}`,\n        title: item.description,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mr-2\",\n          onClick: () => editItem(item),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => handleDelete(item),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this));\n  };\n\n  const refreshList = () => {\n    axios.get('/api/todos/').then(res => setTodoList(res.data)).catch(err => console.log(err));\n  }; // Mount refreshList function at start\n\n\n  useEffect(() => {\n    refreshList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"Todo app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: createItem,\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), renderTabList(), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush border-top-0\",\n              children: renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), modal ? /*#__PURE__*/_jsxDEV(Popup, {\n        activeItem: activeItem,\n        setActiveItem: setActiveItem,\n        toggle: toggle,\n        onSave: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YQ8jrfj5Ov4S1asZ9Nqayc/f7lI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jerometo/Documents/django-todo-react/frontend/src/App.js"],"names":["useEffect","useState","Popup","axios","App","todoItems","id","title","description","completed","viewCompleted","setViewCompleted","todoList","setTodoList","modal","setModal","activeItem","setActiveItem","toggle","handleSubmit","item","put","then","res","refreshList","post","handleDelete","delete","createItem","editItem","displayCompleted","status","renderTabList","renderItems","newItems","filter","map","get","data","catch","err","console","log"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Popup from './components/Popup';\nimport axios from 'axios';\n\nfunction App() {\n  const todoItems = [\n    {\n      id: 2,\n      title: 'Buy avocados from Calbee',\n      description: 'I need to buy some more avocados',\n      completed: true,\n    },\n    {\n      id: 3,\n      title: 'Need to learn Django REST Framework',\n      description: 'Yes, please more knowledge!',\n      completed: false,\n    },\n    {\n      id: 4,\n      title: 'Study some more Data Analysis and SQL',\n      description: 'I need to study more PostgreSQL',\n      completed: false,\n    },\n    {\n      id: 5,\n      title: 'Study MySQL',\n      description: 'Learn the basics of SQL coding of database',\n      completed: true,\n    },\n    {\n      id: 6,\n      title: 'Django REST Framework is so awesome!!!!',\n      description: \"WHAT THE HELL!! I'm freaking out!!! Django is awesome!!\",\n      completed: true,\n    },\n  ];\n\n  // States\n  const [viewCompleted, setViewCompleted] = useState(false);\n  const [todoList, setTodoList] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [activeItem, setActiveItem] = useState({\n    title: '',\n    description: '',\n    completed: false,\n  });\n\n  // Functions\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const handleSubmit = (item) => {\n    toggle();\n    if (item.id) {\n      axios.put(`/api/todos/${item.id}/`, item).then((res) => refreshList());\n      return;\n    }\n    axios.post('/api/todos/', item).then((res) => refreshList());\n  };\n\n  const handleDelete = (item) => {\n    axios.delete(`/api/todos/${item.id}/`).then((res) => refreshList());\n  };\n\n  const createItem = () => {\n    const item = { title: '', description: '', completed: false };\n\n    setActiveItem(item);\n    setModal(!modal);\n  };\n\n  const editItem = (item) => {\n    setActiveItem(item);\n    setModal(!modal);\n  };\n\n  const displayCompleted = (status) => {\n    if (status) {\n      return setViewCompleted(true);\n    }\n\n    return setViewCompleted(false);\n  };\n\n  const renderTabList = () => (\n    <div className='nav nav-tabs'>\n      <span\n        className={viewCompleted ? 'nav-link active' : 'nav-link'}\n        onClick={() => displayCompleted(true)}\n      >\n        Complete\n      </span>\n      <span\n        className={viewCompleted ? 'nav-link' : 'nav-link active'}\n        onClick={() => displayCompleted(false)}\n      >\n        Incomplete\n      </span>\n    </div>\n  );\n\n  const renderItems = () => {\n    const newItems = todoList.filter((item) => item.completed == viewCompleted);\n\n    return newItems.map((item) => (\n      <li\n        key={item.id}\n        className='list-group-item d-flex justify-content-between align-items-center'\n      >\n        <span\n          className={`todo-title mr-2 ${viewCompleted ? 'completed-todo' : ''}`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button\n            className='btn btn-secondary mr-2'\n            onClick={() => editItem(item)}\n          >\n            Edit\n          </button>\n          <button className='btn btn-danger' onClick={() => handleDelete(item)}>\n            Delete\n          </button>\n        </span>\n      </li>\n    ));\n  };\n\n  const refreshList = () => {\n    axios\n      .get('/api/todos/')\n      .then((res) => setTodoList(res.data))\n      .catch((err) => console.log(err));\n  };\n\n  // Mount refreshList function at start\n\n  useEffect(() => {\n    refreshList();\n  }, []);\n\n  return (\n    <div className='App'>\n      <main className='container'>\n        <h1 className='text-white text-uppercase text-center my-4'>Todo app</h1>\n        <div className='row'>\n          <div className='col-md-6 col-sm-10 mx-auto p-0'>\n            <div className='card p-3'>\n              <div className='mb-4'>\n                <button className='btn btn-primary' onClick={createItem}>\n                  Add task\n                </button>\n              </div>\n              {renderTabList()}\n              <ul className='list-group list-group-flush border-top-0'>\n                {renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {modal ? (\n          <Popup\n            activeItem={activeItem}\n            setActiveItem={setActiveItem}\n            toggle={toggle}\n            onSave={handleSubmit}\n          />\n        ) : null}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}