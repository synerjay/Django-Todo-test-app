{"ast":null,"code":"var _jsxFileName = \"/Users/jerometo/Documents/django-todo-react/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const todoItems = [{\n    id: 2,\n    title: 'Buy avocados from Calbee',\n    description: 'I need to buy some more avocados',\n    completed: true\n  }, {\n    id: 3,\n    title: 'Need to learn Django REST Framework',\n    description: 'Yes, please more knowledge!',\n    completed: false\n  }, {\n    id: 4,\n    title: 'Study some more Data Analysis and SQL',\n    description: 'I need to study more PostgreSQL',\n    completed: false\n  }, {\n    id: 5,\n    title: 'Study MySQL',\n    description: 'Learn the basics of SQL coding of database',\n    completed: true\n  }, {\n    id: 6,\n    title: 'Django REST Framework is so awesome!!!!',\n    description: \"WHAT THE HELL!! I'm freaking out!!! Django is awesome!!\",\n    completed: true\n  }]; // States\n\n  const [viewCompleted, setViewCompleted] = useState(false);\n  const [todoList, setTodoList] = useState(todoItems);\n  const [modal, setModal] = useState(false);\n  const [activeItem, setActiveItem] = useState({\n    title: '',\n    description: '',\n    completed: false\n  }); // Functions\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const handleSubmit = item => {\n    toggle();\n    alert('save' + JSON.stringify(item));\n  };\n\n  const handleDelete = item => {\n    alert('delete' + JSON.stringify(item));\n  };\n\n  const createItem = () => {\n    const item = {\n      title: '',\n      description: '',\n      completed: false\n    };\n    setActiveItem(item);\n    setModal(!modal);\n  };\n\n  const editItem = item => {\n    this.setState({\n      activeItem: item,\n      modal: !this.state.modal\n    });\n  };\n\n  const displayCompleted = status => {\n    if (status) {\n      return setViewCompleted(true);\n    }\n\n    return setViewCompleted(false);\n  };\n\n  const renderTabList = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav nav-tabs\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: viewCompleted ? 'nav-link active' : 'nav-link',\n      onClick: () => displayCompleted(true),\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: viewCompleted ? 'nav-link' : 'nav-link active',\n      onClick: () => displayCompleted(false),\n      children: \"Incomplete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n\n  const renderItems = () => {\n    const newItems = todoList.filter(item => item.completed == viewCompleted);\n    return newItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `todo-title mr-2 ${viewCompleted ? 'completed-todo' : ''}`,\n        title: item.description,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mr-2\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"Todo app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), renderTabList(), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush border-top-0\",\n              children: renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), modal ? /*#__PURE__*/_jsxDEV(Modal, {\n        activeItem: this.state.activeItem,\n        toggle: this.toggle,\n        onSave: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"w4IbvgSoyCsNo4UE/iKiP4WvPB0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jerometo/Documents/django-todo-react/frontend/src/App.js"],"names":["useState","App","todoItems","id","title","description","completed","viewCompleted","setViewCompleted","todoList","setTodoList","modal","setModal","activeItem","setActiveItem","toggle","handleSubmit","item","alert","JSON","stringify","handleDelete","createItem","editItem","setState","state","displayCompleted","status","renderTabList","renderItems","newItems","filter","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,SAAS,GAAG,CAChB;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,0BAFT;AAGEC,IAAAA,WAAW,EAAE,kCAHf;AAIEC,IAAAA,SAAS,EAAE;AAJb,GADgB,EAOhB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,qCAFT;AAGEC,IAAAA,WAAW,EAAE,6BAHf;AAIEC,IAAAA,SAAS,EAAE;AAJb,GAPgB,EAahB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,uCAFT;AAGEC,IAAAA,WAAW,EAAE,iCAHf;AAIEC,IAAAA,SAAS,EAAE;AAJb,GAbgB,EAmBhB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,aAFT;AAGEC,IAAAA,WAAW,EAAE,4CAHf;AAIEC,IAAAA,SAAS,EAAE;AAJb,GAnBgB,EAyBhB;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,yCAFT;AAGEC,IAAAA,WAAW,EAAE,yDAHf;AAIEC,IAAAA,SAAS,EAAE;AAJb,GAzBgB,CAAlB,CADa,CAkCb;;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACE,SAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC;AAC3CI,IAAAA,KAAK,EAAE,EADoC;AAE3CC,IAAAA,WAAW,EAAE,EAF8B;AAG3CC,IAAAA,SAAS,EAAE;AAHgC,GAAD,CAA5C,CAtCa,CA4Cb;;AAEA,QAAMS,MAAM,GAAG,MAAM;AACnBH,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAIA,QAAMK,YAAY,GAAIC,IAAD,IAAU;AAC7BF,IAAAA,MAAM;AACNG,IAAAA,KAAK,CAAC,SAASC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAV,CAAL;AACD,GAHD;;AAKA,QAAMI,YAAY,GAAIJ,IAAD,IAAU;AAC7BC,IAAAA,KAAK,CAAC,WAAWC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAZ,CAAL;AACD,GAFD;;AAIA,QAAMK,UAAU,GAAG,MAAM;AACvB,UAAML,IAAI,GAAG;AAAEb,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,WAAW,EAAE,EAA1B;AAA8BC,MAAAA,SAAS,EAAE;AAAzC,KAAb;AAEAQ,IAAAA,aAAa,CAACG,IAAD,CAAb;AACAL,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GALD;;AAOA,QAAMY,QAAQ,GAAIN,IAAD,IAAU;AACzB,SAAKO,QAAL,CAAc;AAAEX,MAAAA,UAAU,EAAEI,IAAd;AAAoBN,MAAAA,KAAK,EAAE,CAAC,KAAKc,KAAL,CAAWd;AAAvC,KAAd;AACD,GAFD;;AAIA,QAAMe,gBAAgB,GAAIC,MAAD,IAAY;AACnC,QAAIA,MAAJ,EAAY;AACV,aAAOnB,gBAAgB,CAAC,IAAD,CAAvB;AACD;;AAED,WAAOA,gBAAgB,CAAC,KAAD,CAAvB;AACD,GAND;;AAQA,QAAMoB,aAAa,GAAG,mBACpB;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAErB,aAAa,GAAG,iBAAH,GAAuB,UADjD;AAEE,MAAA,OAAO,EAAE,MAAMmB,gBAAgB,CAAC,IAAD,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,SAAS,EAAEnB,aAAa,GAAG,UAAH,GAAgB,iBAD1C;AAEE,MAAA,OAAO,EAAE,MAAMmB,gBAAgB,CAAC,KAAD,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAiBA,QAAMG,WAAW,GAAG,MAAM;AACxB,UAAMC,QAAQ,GAAGrB,QAAQ,CAACsB,MAAT,CAAiBd,IAAD,IAAUA,IAAI,CAACX,SAAL,IAAkBC,aAA5C,CAAjB;AAEA,WAAOuB,QAAQ,CAACE,GAAT,CAAcf,IAAD,iBAClB;AAEE,MAAA,SAAS,EAAC,mEAFZ;AAAA,8BAIE;AACE,QAAA,SAAS,EAAG,mBAAkBV,aAAa,GAAG,gBAAH,GAAsB,EAAG,EADtE;AAEE,QAAA,KAAK,EAAEU,IAAI,CAACZ,WAFd;AAAA,kBAIGY,IAAI,CAACb;AAJR;AAAA;AAAA;AAAA;AAAA,cAJF,eAUE;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA,OACOa,IAAI,CAACd,EADZ;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAiBD,GApBD;;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,4CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,qCACE;AAAQ,gBAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,EAIGyB,aAAa,EAJhB,eAKE;AAAI,cAAA,SAAS,EAAC,0CAAd;AAAA,wBACGC,WAAW;AADd;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,EAeGlB,KAAK,gBACJ,QAAC,KAAD;AACE,QAAA,UAAU,EAAE,KAAKc,KAAL,CAAWZ,UADzB;AAEE,QAAA,MAAM,EAAE,KAAKE,MAFf;AAGE,QAAA,MAAM,EAAE,KAAKC;AAHf;AAAA;AAAA;AAAA;AAAA,cADI,GAMF,IArBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAhJQf,G;;KAAAA,G;AAkJT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\n\nfunction App() {\n  const todoItems = [\n    {\n      id: 2,\n      title: 'Buy avocados from Calbee',\n      description: 'I need to buy some more avocados',\n      completed: true,\n    },\n    {\n      id: 3,\n      title: 'Need to learn Django REST Framework',\n      description: 'Yes, please more knowledge!',\n      completed: false,\n    },\n    {\n      id: 4,\n      title: 'Study some more Data Analysis and SQL',\n      description: 'I need to study more PostgreSQL',\n      completed: false,\n    },\n    {\n      id: 5,\n      title: 'Study MySQL',\n      description: 'Learn the basics of SQL coding of database',\n      completed: true,\n    },\n    {\n      id: 6,\n      title: 'Django REST Framework is so awesome!!!!',\n      description: \"WHAT THE HELL!! I'm freaking out!!! Django is awesome!!\",\n      completed: true,\n    },\n  ];\n\n  // States\n  const [viewCompleted, setViewCompleted] = useState(false);\n  const [todoList, setTodoList] = useState(todoItems);\n  const [modal, setModal] = useState(false);\n  const [activeItem, setActiveItem] = useState({\n    title: '',\n    description: '',\n    completed: false,\n  });\n\n  // Functions\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const handleSubmit = (item) => {\n    toggle();\n    alert('save' + JSON.stringify(item));\n  };\n\n  const handleDelete = (item) => {\n    alert('delete' + JSON.stringify(item));\n  };\n\n  const createItem = () => {\n    const item = { title: '', description: '', completed: false };\n\n    setActiveItem(item);\n    setModal(!modal);\n  };\n\n  const editItem = (item) => {\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n\n  const displayCompleted = (status) => {\n    if (status) {\n      return setViewCompleted(true);\n    }\n\n    return setViewCompleted(false);\n  };\n\n  const renderTabList = () => (\n    <div className='nav nav-tabs'>\n      <span\n        className={viewCompleted ? 'nav-link active' : 'nav-link'}\n        onClick={() => displayCompleted(true)}\n      >\n        Complete\n      </span>\n      <span\n        className={viewCompleted ? 'nav-link' : 'nav-link active'}\n        onClick={() => displayCompleted(false)}\n      >\n        Incomplete\n      </span>\n    </div>\n  );\n\n  const renderItems = () => {\n    const newItems = todoList.filter((item) => item.completed == viewCompleted);\n\n    return newItems.map((item) => (\n      <li\n        key={item.id}\n        className='list-group-item d-flex justify-content-between align-items-center'\n      >\n        <span\n          className={`todo-title mr-2 ${viewCompleted ? 'completed-todo' : ''}`}\n          title={item.description}\n        >\n          {item.title}\n        </span>\n        <span>\n          <button className='btn btn-secondary mr-2'>Edit</button>\n          <button className='btn btn-danger'>Delete</button>\n        </span>\n      </li>\n    ));\n  };\n\n  return (\n    <div className='App'>\n      <main className='container'>\n        <h1 className='text-white text-uppercase text-center my-4'>Todo app</h1>\n        <div className='row'>\n          <div className='col-md-6 col-sm-10 mx-auto p-0'>\n            <div className='card p-3'>\n              <div className='mb-4'>\n                <button className='btn btn-primary'>Add task</button>\n              </div>\n              {renderTabList()}\n              <ul className='list-group list-group-flush border-top-0'>\n                {renderItems()}\n              </ul>\n            </div>\n          </div>\n        </div>\n        {modal ? (\n          <Modal\n            activeItem={this.state.activeItem}\n            toggle={this.toggle}\n            onSave={this.handleSubmit}\n          />\n        ) : null}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}