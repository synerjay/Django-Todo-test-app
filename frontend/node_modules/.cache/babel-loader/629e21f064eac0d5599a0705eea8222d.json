{"ast":null,"code":"import _defineProperty from\"/Users/jerometo/Documents/django-todo-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/jerometo/Documents/django-todo-react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{Button,Modal,ModalHeader,ModalBody,ModalFooter,Form,FormGroup,Input,Label}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Popup=function Popup(_ref){var activeItem=_ref.activeItem,setActiveItem=_ref.setActiveItem,toggle=_ref.toggle,onSave=_ref.onSave;var handleChange=function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;if(e.target.type==='checkbox'){value=e.target.checked;}var newActiveItem=_objectSpread(_objectSpread({},activeItem),{},_defineProperty({},name,value));setActiveItem(newActiveItem);};return/*#__PURE__*/_jsxs(Modal,{isOpen:true,toggle:toggle,children:[/*#__PURE__*/_jsx(ModalHeader,{toggle:toggle,children:\"Todo Item\"}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"todo-title\",children:\"Title\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",id:\"todo-title\",name:\"title\",value:activeItem.title,onChange:handleChange,placeholder:\"Enter Todo Title\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"todo-description\",children:\"Description\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",id:\"todo-description\",name:\"description\",value:activeItem.description,onChange:handleChange,placeholder:\"Enter Todo description\"})]}),/*#__PURE__*/_jsx(FormGroup,{check:true,children:/*#__PURE__*/_jsxs(Label,{check:true,children:[/*#__PURE__*/_jsx(Input,{type:\"checkbox\",name:\"completed\",checked:activeItem.completed,onChange:handleChange}),\"Completed\"]})})]})}),/*#__PURE__*/_jsx(ModalFooter,{children:/*#__PURE__*/_jsx(Button,{color:\"success\",onClick:function onClick(){return onSave(activeItem);},children:\"Save\"})})]});};export default Popup;","map":{"version":3,"sources":["/Users/jerometo/Documents/django-todo-react/frontend/src/components/Popup.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","Popup","activeItem","setActiveItem","toggle","onSave","handleChange","e","target","name","value","type","checked","newActiveItem","title","description","completed"],"mappings":"uVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,MADF,CAEEC,KAFF,CAGEC,WAHF,CAIEC,SAJF,CAKEC,WALF,CAMEC,IANF,CAOEC,SAPF,CAQEC,KARF,CASEC,KATF,KAUO,YAVP,C,wFAYA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAmD,IAAhDC,CAAAA,UAAgD,MAAhDA,UAAgD,CAApCC,aAAoC,MAApCA,aAAoC,CAArBC,MAAqB,MAArBA,MAAqB,CAAbC,MAAa,MAAbA,MAAa,CAC/D,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1B,cAAsBA,CAAC,CAACC,MAAxB,CAAMC,IAAN,WAAMA,IAAN,CAAYC,KAAZ,WAAYA,KAAZ,CAEA,GAAIH,CAAC,CAACC,MAAF,CAASG,IAAT,GAAkB,UAAtB,CAAkC,CAChCD,KAAK,CAAGH,CAAC,CAACC,MAAF,CAASI,OAAjB,CACD,CAED,GAAMC,CAAAA,aAAa,gCAAQX,UAAR,wBAAqBO,IAArB,CAA4BC,KAA5B,EAAnB,CAEAP,aAAa,CAACU,aAAD,CAAb,CACD,CAVD,CAYA,mBACE,MAAC,KAAD,EAAO,MAAM,CAAE,IAAf,CAAqB,MAAM,CAAET,MAA7B,wBACE,KAAC,WAAD,EAAa,MAAM,CAAEA,MAArB,uBADF,cAEE,KAAC,SAAD,wBACE,MAAC,IAAD,yBACE,MAAC,SAAD,yBACE,KAAC,KAAD,EAAO,GAAG,CAAC,YAAX,mBADF,cAEE,KAAC,KAAD,EACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,YAFL,CAGE,IAAI,CAAC,OAHP,CAIE,KAAK,CAAEF,UAAU,CAACY,KAJpB,CAKE,QAAQ,CAAER,YALZ,CAME,WAAW,CAAC,kBANd,EAFF,GADF,cAYE,MAAC,SAAD,yBACE,KAAC,KAAD,EAAO,GAAG,CAAC,kBAAX,yBADF,cAEE,KAAC,KAAD,EACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,kBAFL,CAGE,IAAI,CAAC,aAHP,CAIE,KAAK,CAAEJ,UAAU,CAACa,WAJpB,CAKE,QAAQ,CAAET,YALZ,CAME,WAAW,CAAC,wBANd,EAFF,GAZF,cAuBE,KAAC,SAAD,EAAW,KAAK,KAAhB,uBACE,MAAC,KAAD,EAAO,KAAK,KAAZ,wBACE,KAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,WAFP,CAGE,OAAO,CAAEJ,UAAU,CAACc,SAHtB,CAIE,QAAQ,CAAEV,YAJZ,EADF,eADF,EAvBF,GADF,EAFF,cAuCE,KAAC,WAAD,wBACE,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,OAAO,CAAE,yBAAMD,CAAAA,MAAM,CAACH,UAAD,CAAZ,EAAjC,kBADF,EAvCF,GADF,CA+CD,CA5DD,CA8DA,cAAeD,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} from 'reactstrap';\n\nconst Popup = ({ activeItem, setActiveItem, toggle, onSave }) => {\n  const handleChange = (e) => {\n    let { name, value } = e.target;\n\n    if (e.target.type === 'checkbox') {\n      value = e.target.checked;\n    }\n\n    const newActiveItem = { ...activeItem, [name]: value };\n\n    setActiveItem(newActiveItem);\n  };\n\n  return (\n    <Modal isOpen={true} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Todo Item</ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <Label for='todo-title'>Title</Label>\n            <Input\n              type='text'\n              id='todo-title'\n              name='title'\n              value={activeItem.title}\n              onChange={handleChange}\n              placeholder='Enter Todo Title'\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for='todo-description'>Description</Label>\n            <Input\n              type='text'\n              id='todo-description'\n              name='description'\n              value={activeItem.description}\n              onChange={handleChange}\n              placeholder='Enter Todo description'\n            />\n          </FormGroup>\n          <FormGroup check>\n            <Label check>\n              <Input\n                type='checkbox'\n                name='completed'\n                checked={activeItem.completed}\n                onChange={handleChange}\n              />\n              Completed\n            </Label>\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color='success' onClick={() => onSave(activeItem)}>\n          Save\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}